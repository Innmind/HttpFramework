arguments:
    routes: set<Innmind\Url\PathInterface>
    controllers: map<string, Innmind\HttpFramework\Controller>
    requestMatcher: Innmind\Router\RequestMatcher ?? $defaultRequestMatcher
    authenticator: '?Innmind\HttpAuthentication\Authenticator'
    authenticationFallbacks: map<string, Innmind\HttpFramework\Authenticate\Fallback> ?? $authentication.fallbacks.empty
    routePatternToAuthenticate: '?string'

dependencies:
    router @innmind/router/container.yml:
        routes: $routes

expose:
    router: $handler.router
    enforceHttps: $handler.enforceHttps
    authenticate: $handler.authenticate

services:
    handler:
        router Innmind\HttpFramework\Router:
            - $requestMatcher
            - $controllers

        enforceHttps Innmind\HttpFramework\EnforceHttps:
            - '@decorated'

        authenticate Innmind\HttpFramework\Authenticate:
            - '@decorated'
            - $authenticator
            - $authentication.condition
            - $authentication.fallbacks

    defaultRequestMatcher Innmind\HttpFramework\Router\RequestMatcher:
        - $router.requestMatcher

    authentication:
        condition Innmind\HttpFramework\Authenticate\Condition:
            - $routePatternToAuthenticate

        fallbacks merge:
            - $authentication.fallbacks.generic
            - $authenticationFallbacks

        fallbacks:
            generic map<string, Innmind\HttpFramework\Authenticate\Fallback>:
                - <Innmind\HttpAuthentication\Exception\NoAuthenticationProvided, $authentication.fallbacks.unauthorized>
                - <Innmind\HttpAuthentication\Exception\MalformedAuthorizationHeader, $authentication.fallbacks.malformedAuthorizationHeader>

            empty map<string, Innmind\HttpFramework\Authenticate\Fallback>: []
            unauthorized Innmind\HttpFramework\Authenticate\Unauthorized: []
            malformedAuthorizationHeader Innmind\HttpFramework\Authenticate\MalformedAuthorizationHeader: []
